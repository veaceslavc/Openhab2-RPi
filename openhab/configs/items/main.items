
Group Temperatures
Group Lights

Group OutsideTemp_Chart	
Number Outside_Temp 		        "Outside Temp [%.1f °C]"		<temperature> 	(Outside, Temperatures, OutsideTemp_Chart) {pilight="local#outside_temp,property=temperature"}
Number Outside_Temp_Chart_Period    "Chart Period"
DateTime Outside_Temp_LastUpdate	"Last Update [%1$ta %1$tR]"	<clock>
Switch Heating_Controls_Active     "Heating Controls"

Group LivRoom
Group LivTemp_Chart													
Group GF_Living_TH "Living Room Thermostat" [ "Thermostat" ]
Number Liv_Temperature 		"Living Temp [%.1f °C]"		<temperature> 	(LivRoom, Temperatures, LivTemp_Chart, GF_Living_TH) [ "CurrentTemperature" ] {mqtt="<[broker:/ha/livroom/temp:state:default]"}
Number Liv_Humidity 		"Humidity [%.1f %%]"		<water> 		(LivRoom) {mqtt="<[broker:/ha/livroom/hum:state:default]"}
Number Liv_Humidex		    "Humidex [SCALE(humidex.scale):%s]" 			(LivRoom)
Number Liv_Temp_Chart_Period		"Chart Period"
Number Liv_Temp_Predefined							<temperature_cold>
DateTime Liv_Temp_LastUpdate	"Last Update [%1$ta %1$tR]"	<clock>

String Liv_Temp_DelayedCaption	"Delayed Temp [%s]"				<clock-on>
Number Liv_Temp_DelayedTemp		"Delayed Temp [%.1f °C]"		<temperature_cold>
Number Liv_Temp_DelayedInterval	"Delay By [%.1f hours]"				<clock>
Number Liv_Temp_DelayedOnOff	"Timer"						<clock-on>

Switch LivLight_Lamp 	"Living room Lamp" 		(LivRoom, Lights)	["Switchable"]	{pilight="local#livRoom_light"}
Number Liv_Temp_Setpoint		"Set Temp [%.1f °C]" <temperature_cold> (LivRoom, LivTemp_Chart, GF_Living_TH)  [ "TargetTemperature" ] {mqtt=">[broker:/ha/livroom/targetTemp:command:*:default], <[broker:/ha/livroom/targetTempIn:state:default]"}
String TH_GF_HCLivMode "Living Room Heating/Cooling Mode" (GF_Living_TH) [ "homekit:HeatingCoolingMode" ]
Switch RF433_Socket2 	"Living humidifier"		(BedRoom)	["Switchable"] {pilight="local#remote_button_2"}


Group BedRoom
Group BedTemp_Chart
Group GF_Bedroom_TH "BedRoom Thermostat" [ "Thermostat" ]													
Number Bed_Temperature 		"Bedroom Temp [%.1f °C]"		<temperature> 	(BedRoom, Temperatures, BedTemp_Chart, GF_Bedroom_TH) [ "CurrentTemperature" ] {mqtt="<[broker:/ha/bedroom/temp:state:default]"}
Number Bed_Humidity 		"Humidity [%.1f %%]"		<water> 		(BedRoom) {mqtt="<[broker:/ha/bedroom/hum:state:default]"}
Number Bed_Temp_Chart_Period		"Chart Period"
Number Bed_Temp_Predefined										<temperature_cold>
DateTime Bed_Temp_LastUpdate		"Last Update [%1$ta %1$tR]"	<clock>

Switch BedLight_Lamp 	"Humidifier" 		(BedRoom)	["Switchable"] {pilight="local#remote_button_4"}
Number BedTemp_Setpoint		"Set BTemp [%.1f °C]" <temperature_cold> (BedRoom, BedTemp_Chart, GF_Bedroom_TH) [ "TargetTemperature" ] {mqtt=">[broker:/ha/bedroom/targetTemp:command:*:default], <[broker:/ha/bedroom/targetTempIn:state:default]"}
String TH_GF_HCBedMode "BedRoom Heating/Cooling Mode" (GF_Bedroom_TH) [ "homekit:HeatingCoolingMode" ]
Dimmer Bedroom_Dimmer   "Bedroom Dimmer [%d %%]"           <slider>  [ "Lighting" ] { channel="tplinksmarthome:lb100:bedroom:brightness" }
Dimmer Bedroom_Lamp   "Bedroom Lamp [%d %%]"           <slider>  [ "Lighting" ] { channel="tplinksmarthome:lb120:bedroom:brightness" }
Dimmer Bedroom_Lamp_Color   "Bedroom Lamp Color [%d %%]"           <slider>  { channel="tplinksmarthome:lb120:bedroom:colorTemperature" }

/* Roomba items */
Group roomba_items  "Roomba"        <roomba>        (gGF)

/* Roomba Commands */
String roomba_command "Roomba" <roomba> (roomba_items) {mqtt=">[broker:/roomba/command:command:*:${command}]", autoupdate="false"}
/* Settings */
Switch roomba_edgeClean    "Edge Clean [%s]" <switch> (roomba_items) {mqtt=">[broker:/roomba/setting:command:ON:openOnly false],>[broker:/roomba/setting:command:OFF:openOnly true],<[broker:/roomba/feedback/openOnly:state:MAP(inverse_switch.map)]", autoupdate="false"}
Switch roomba_carpetBoost  "Auto carpet Boost [%s]" <switch> (roomba_items) {mqtt=">[broker:/roomba/setting:command:ON:carpetBoost true],>[broker:/roomba/setting:command:OFF:carpetBoost false],<[broker:/roomba/feedback/carpetBoost:state:MAP(switch.map)]", autoupdate="false"}
Switch roomba_vacHigh      "Vacuum Boost [%s]" <switch> (roomba_items) {mqtt=">[broker:/roomba/setting:command:ON:vacHigh true],>[broker:/roomba/setting:command:OFF:vacHigh false],<[broker:/roomba/feedback/vacHigh:state:MAP(switch.map)]", autoupdate="false"}
Switch roomba_noAutoPasses "Auto Passes [%s]" <switch> (roomba_items) {mqtt=">[broker:/roomba/setting:command:ON:noAutoPasses false],>[broker:/roomba/setting:command:OFF:noAutoPasses true],<[broker:/roomba/feedback/noAutoPasses:state:MAP(inverse_switch.map)]", autoupdate="false"}
Switch roomba_twoPass      "Two Passes [%s]" <switch> (roomba_items) {mqtt=">[broker:/roomba/setting:command:ON:twoPass true],>[broker:/roomba/setting:command:OFF:twoPass false],<[broker:/roomba/feedback/twoPass:state:MAP(switch.map)]", autoupdate="false"}
Switch roomba_binPause     "Always Complete (even if bin is full) [%s]" <switch> (roomba_items) {mqtt=">[broker:/roomba/setting:command:ON:binPause false],>[broker:/roomba/setting:command:OFF:binPause true],<[broker:/roomba/feedback/binPause:state:MAP(inverse_switch.map)]", autoupdate="false"}
/* Roomba Feedback */
String roomba_softwareVer  "Software Version [%s]" <text> (roomba_items) {mqtt="<[broker:/roomba/feedback/softwareVer:state:default]"}
Number roomba_batPct "Battery [%d%%]" <battery> (roomba_items, Battery)  {mqtt="<[broker:/roomba/feedback/batPct:state:default]"}
String roomba_lastcommand  "Last Command [%s]" <roomba> (roomba_items) {mqtt="<[broker:/roomba/feedback/lastCommand_command:state:default]"}
Switch roomba_bin_present  "Bin Present [%s]" <trashpresent> (roomba_items) {mqtt="<[broker:/roomba/feedback/bin_present:state:MAP(switch.map)]"}
Switch roomba_full   "Bin Full [%s]" <trash> (roomba_items) {mqtt="<[broker:/roomba/feedback/bin_full:state:MAP(switch.map)]"}
/* Mission values */
String roomba_mission  "Mission [%s]" <msg> (roomba_items) {mqtt="<[broker:/roomba/feedback/cleanMissionStatus_cycle:state:default]"}
Number roomba_nMssn    "Cleaning Mission Number [%d]" <number> (roomba_items)  {mqtt="<[broker:/roomba/feedback/cleanMissionStatus_nMssn:state:default]"}
String roomba_phase    "Phase [%s]" <msg> (roomba_items) {mqtt="<[broker:/roomba/feedback/cleanMissionStatus_phase:state:default]"}
String roomba_initiator  "Initiator [%s]" <msg> (roomba_items) {mqtt="<[broker:/roomba/feedback/cleanMissionStatus_initiator:state:default]"}
Switch roomba_error "Error [%s]" <roombaerror> (roomba_items) {mqtt="<[broker:/roomba/feedback/cleanMissionStatus_error:state:MAP(switchFromMqtt.map)]"}
String roomba_errortext  "Error Message [%s]" <msg> (roomba_items) {mqtt="<[broker:/roomba/feedback/error_message:state:default]"}
Number roomba_mssnM "Cleaning Elapsed Time [%d m]" <clock> (roomba_items)  {mqtt="<[broker:/roomba/feedback/cleanMissionStatus_mssnM:state:default]"}
Number roomba_sqft "Square Ft Cleaned [%d]" <groundfloor> (roomba_items)  {mqtt="<[broker:/roomba/feedback/cleanMissionStatus_sqft:state:default]"}
Number roomba_expireM "Mission Recharge Time [%d m]" <clock> (roomba_items)  {mqtt="<[broker:/roomba/feedback/cleanMissionStatus_expireM:state:default]"}
Number roomba_rechrgM "Remaining Time To Recharge [%d m]" <clock> (roomba_items)  {mqtt="<[broker:/roomba/feedback/cleanMissionStatus_rechrgM:state:default]"}
String roomba_status    "Status [%s]" <msg> (roomba_items) {mqtt="<[broker:/roomba/feedback/state:state:default]"}
Dimmer roomba_percent_complete    "Mission % Completed [%d%%]" <humidity> (roomba_items)
DateTime roomba_lastmissioncompleted "Last Mission Completed [%1$ta %1$tR]" <calendar>
/* Schedule */
String roomba_cycle   "Day of Week [%s]" <calendar> (roomba_items) {mqtt="<[broker:/roomba/feedback/cleanSchedule_cycle:state:default]"}
String roomba_cleanSchedule_h   "Hour of Day [%s]" <clock> (roomba_items) {mqtt="<[broker:/roomba/feedback/cleanSchedule_h:state:default]"}
String roomba_cleanSchedule_m   "Minute of Hour [%s]" <clock> (roomba_items) {mqtt="<[broker:/roomba/feedback/cleanSchedule_m:state:default]"}
String roomba_cleanSchedule "Schedule [%s]" <calendar> (roomba_items)
/* General */
Switch roomba_control "Roomba ON/OFF [%s]" <switch> (roomba_items)
Number roomba_theta "Theta [%d]" <angle> (roomba_items)  {mqtt="<[broker:/roomba/feedback/pose_theta:state:default]"}
Number roomba_x "X [%d]" <map> (roomba_items)  {mqtt="<[broker:/roomba/feedback/pose_point_x:state:default]"}
Number roomba_y "Y [%d]" <map> (roomba_items)  {mqtt="<[broker:/roomba/feedback/pose_point_y:state:default]"}
Number roomba_rssi "RSSI [%d]" <network> (roomba_items)  {mqtt="<[broker:/roomba/feedback/signal_rssi:state:default]"}
DateTime roomba_lastheardfrom "Last Update [%1$ta %1$tR]" <clock>
